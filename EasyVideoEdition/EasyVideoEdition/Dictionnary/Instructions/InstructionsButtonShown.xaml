<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:EasyVideoEdition.Dictionnary">

    <!-- Resources for the entire application can be 
         defined here. -->
    <GradientStopCollection x:Key="MyGlassGradientStopsResource">
        <GradientStop Color="WhiteSmoke" Offset="0.2" />
        <GradientStop Color="Transparent" Offset="0.4" />
        <GradientStop Color="WhiteSmoke" Offset="0.5" />
        <GradientStop Color="Transparent" Offset="0.75" />
        <GradientStop Color="WhiteSmoke" Offset="0.9" />
        <GradientStop Color="Transparent" Offset="1" />
    </GradientStopCollection>

    <LinearGradientBrush 
            x:Key="MyGlassBrushResource" 
           StartPoint="0,0" EndPoint="1,1" Opacity="0.75" 
           GradientStops="{StaticResource MyGlassGradientStopsResource}" 
        />

    <!--This is for gradient button style-->
    <ControlTemplate x:Key="instructionsButtonShownTemplate" TargetType="{x:Type Button}">

        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True">
            <!-- Outer Rectangle with rounded corners. -->
            <Rectangle
                                x:Name="outerRectangle" 
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Stretch" 
                                Stroke="#848484" 
                                RadiusX="0" RadiusY="0" StrokeThickness="0" 
                                Fill="#FF33333B"                           
                            />
            <Border>
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="5" BlurRadius="10"/>
                </Border.Effect>
            </Border>
            <!-- Glass Rectangle -->
            <Rectangle x:Name="glassCube" HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  StrokeThickness="2" RadiusX="0" RadiusY="0" Opacity="0"
                                  Fill="{StaticResource MyGlassBrushResource}"
                                  RenderTransformOrigin="0.5,0.5">
                <Rectangle.Stroke>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Offset="0.0" Color="LightBlue" />
                            <GradientStop Offset="1.0" Color="Gray" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Rectangle.Stroke>

                <!-- These transforms have no effect as they are declared here. 
                                   The reason the transforms are included is to be targets 
                                   for animation (see later). -->
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <RotateTransform />
                    </TransformGroup>
                </Rectangle.RenderTransform>

                <!-- A BevelBitmapEffect is applied to give the button a "Beveled" look. -->
                <Rectangle.BitmapEffect>
                    <BevelBitmapEffect />
                </Rectangle.BitmapEffect>
            </Rectangle>

            <!-- Present Content (text) of the button. -->
            <DockPanel Name="myContentPresenterDockPanel">
                <ContentPresenter 
                                     x:Name="myContentPresenter" Margin="0,0,45,0" 
                                     Content="{TemplateBinding  Content}" 
                                     TextBlock.Foreground="white" 
                                     HorizontalAlignment="Right"
                                     VerticalAlignment="Center"
                                 />
            </DockPanel>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property ="Rectangle.Fill" TargetName="outerRectangle" Value="#a8a8a8" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property ="Rectangle.Fill" TargetName="outerRectangle" Value="#c4c4c4"/>
                <Setter Property="TextBlock.Foreground" TargetName="myContentPresenter" Value="Black"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--This style used for normal button style-->
    <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Green" />
        <Setter Property="FontSize" Value="14" />
    </Style>


    <!--This style used for tab item styles-->
    <Style x:Key="tabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="BorderBrush" Value="Blue" />
        <Setter Property="Background" Value="LightPink" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="IndianRed" />
    </Style>

</ResourceDictionary>