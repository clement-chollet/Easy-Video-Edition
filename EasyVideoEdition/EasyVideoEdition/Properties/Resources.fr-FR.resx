<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="addAudioHelp" xml:space="preserve">
    <value>Cet onglet permet d’ajouter les fichiers audios (paroles et/ou musique) qui seront utilisés dans votre vidéo.</value>
  </data>
  <data name="addAudioInstrRec" xml:space="preserve">
    <value>Placez le curseur à l’endroit où l’enregistrement sera placé, puis cliquez sur le bouton “S’enregistrer”. Enregistrez-vous avec votre micro et une fois l’enregistrement fini, cliquez sur OK.</value>
  </data>
  <data name="addAudioInstrSound" xml:space="preserve">
    <value>Placez le curseur à l’endroit où l’audio sera placé, puis cliquez sur le bouton “Ajouter audio”. Choisissez dans vos dossiers le fichier audio que vous voulez ajouter et cliquez sur OK.</value>
  </data>
  <data name="addChapterHelp" xml:space="preserve">
    <value>Cet onglet vous permet de chapitrer votre vidéo pour un meilleur visionnage. Par défaut, le premier chapitre commence à 00:00:00.</value>
  </data>
  <data name="addChapterInstrText" xml:space="preserve">
    <value>Placez votre curseur sur la ligne de temps de la vidéo à l’endroit où vous souhaitez que le nouveau chapitre commence. 
Indiquez le nom du chapitre.
Cochez si vous voulez un écran de transition de chapitre.
Cochez si vous voulez l’écran de transition par défaut ou votre propre image de transition.
Cliquez sur OK.
Pour le modifier, double-cliquez sur le chapitre que vous voulez éditer et indiquez le nouveau nom, écran de transition, durée ou début du chapitre.</value>
  </data>
  <data name="addSubtitlesHelp" xml:space="preserve">
    <value>Cet onglet permet de gérer les sous-titres, c'est-à-dire de les créer, de les modifier ou de les supprimer.</value>
  </data>
  <data name="addSubtitlesInstrText" xml:space="preserve">
    <value>Délimitez un bloc à l’aide des deux curseurs, puis cliquez sur “Ajouter sous-titres”.
Ecrivez le texte que vous voulez voir s’afficher pendant le temps choisi et cliquez sur “OK”.
Pour le modifier, double-cliquez sur le sous-titre et entrez le nouveau texte et/ou  temps dans la nouvelle fenêtre.</value>
  </data>
  <data name="addVisualHelp" xml:space="preserve">
    <value>Sur cet onglet, vous ajoutez tous les éléments visuels (vidéo, photo, …) que vous voulez dans votre vidéo finale. Un bloc d’instructions vous guide pour chaque type d’ajout. Vous pouvez également vous enregistrer avec votre webcam avec le bouton “s’enregistrer”.</value>
  </data>
  <data name="addVisualInstrPic" xml:space="preserve">
    <value>Placez votre curseur à l’endroit où vous voulez ajouter une image.
Cliquez sur le bouton “Ajouter photo” et choisissez le fichier que vous souhaitez ajouter.
Indiquez la durée pendant laquelle vous voulez que l’image apparaisse. Vous pouvez modifier cette durée en double-cliquant sur l'image dans la liste "Mes Images".
Cliquez sur OK. Le fichier s’ajoute à droite du curseur.</value>
  </data>
  <data name="addVisualInstrRec" xml:space="preserve">
    <value>Placer votre curseur à l'endroit où vous voulez ajouter votre enregistrement. 
Cliquez sur le bouton “s’enregistrer” pour afficher vous enregistrer avec votre webcam. 
Cliquez sur OK quand vous avez fini votre enregistrement. Le fichier s’ajoutera à droite du curseur.</value>
  </data>
  <data name="addVisualInstrVid" xml:space="preserve">
    <value>Placez votre curseur à l’endroit où vous voulez ajouter une vidéo.
Cliquez sur le bouton “Ajouter vidéo” et choisissez le fichier que vous souhaitez ajouter.
Cliquez sur OK. Le fichier s’ajoute à droite du curseur.</value>
  </data>
  <data name="delChapterInstrText" xml:space="preserve">
    <value>Cliquez sur le chapitre que vous voulez supprimer dans la liste.
Appuyez sur “Supprimer chapitre”.</value>
  </data>
  <data name="delSubtitlesInstrText" xml:space="preserve">
    <value>Sélectionnez à l’aide de la souris un bloc de sous-titres en cliquant dessus et cliquez sur “Supprimer sous-titre”.</value>
  </data>
  <data name="editAudioHelp" xml:space="preserve">
    <value>Cet onglet permet de gérer les éléments liés à l’audio. Il est possible de supprimer, de déplacer et de couper ces éléments.</value>
  </data>
  <data name="editAudioInstrMusic" xml:space="preserve">
    <value>Délimitez un bloc à l’aide des deux curseurs puis cliquez sur le bouton “Supprimer musique” pour le supprimer.
Choisissez ensuite si vous voulez laisser l’espace supprimé vide ou rassembler les deux blocs adjacents.</value>
  </data>
  <data name="editAudioInstrSpeech" xml:space="preserve">
    <value>Délimitez un bloc à l’aide des deux curseurs puis cliquez sur le bouton “Supprimer parole” pour couper le son à cet endroit.
Choisissez ensuite si vous voulez laisser l’espace supprimé vide ou rassembler les deux blocs adjacents.</value>
  </data>
  <data name="editVisualHelp" xml:space="preserve">
    <value>Cet onglet permet de gérer les éléments visuels. Il est possible de supprimer des parties de la vidéo ainsi que d’en enlever le son.</value>
  </data>
  <data name="editVisualInstrCut" xml:space="preserve">
    <value>Délimitez un bloc à l’aide des deux curseurs, puis cliquez sur le bouton “Supprimer son” pour supprimer le son du bloc.</value>
  </data>
  <data name="editVisualInstrMute" xml:space="preserve">
    <value>Délimitez un bloc à l’aide des deux curseurs puis cliquez sur le bouton “Couper bloc” pour le supprimer.</value>
  </data>
</root>